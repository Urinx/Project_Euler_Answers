#!/usr/bin/env python
#coding:utf-8
import math

'''

Highly divisible triangular number

The sequence of triangle numbers is generated by adding
the natural numbers. So the 7th triangle number would be
1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over
five divisors.
What is the value of the first triangle number to have over
five hundred divisors?

'''

def answer1():
    m,a=50005000,10001
    while True:
        m+=a
        i=1
        f=[]
        while i<=m:
            if m%i==0:
                f.append(i)
            i+=1
        print m,len(f)
        a+=1

# ==========================

def gen_primes():
    D = {}
    q = 2
    while True:
        if q not in D:
            yield q        
            D[q * q] = [q]
        else:
            for p in D[q]:
                D.setdefault(p + q, []).append(p)
            del D[q]
        q += 1

def get_prime_factors(num):
    factors=[]
    for p in gen_primes():
        i,a=num,0
        if p>num:
            break
        while i%p==0:
            i/=p
            a+=1
        if a!=0:
            factors.append((p,a))
    return factors

def answer2():
    m,a=1,2
    while True:
        m+=a
        f=get_prime_factors(m)
        digits=reduce(lambda x,y:x*y,[i[1]+1 for i in f])
        if digits>=500:
            print m
            break
        a+=1

# ==========================

def factor_numbers(num):
    n=1
    for x in xrange(2,int(math.sqrt(num))):
        if num%x==0:
            n+=1
    return n*2

def answer3():
    m,a=0,1
    while True:
        m+=a
        digits=factor_numbers(m)
        if digits>=500:
            print m
            break
        a+=1

import time
tStart=time.time()
# answer1() is very very slow..idk..
# answer2() is memory out and too slow..why??
answer3()
print 'run time=',time.time()-tStart
# 76576500
# run time= 4.45298600197
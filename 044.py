#!/usr/bin/env python
#coding:utf-8

"""

Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

"""

'''
1. p(m),p(n),p(m)+p(n),p(m)+2p(n) all are pentagon numbers
2. minimised a
3. p(n+1)-p(n)=3n+1
4. p(m)>=3n+1
'''
import math,itertools
from operator import *

def is_pentagonal(num):
	if (1+math.sqrt(1+24*num))%6==0: return True
	return False

def p(n):
	return n*(3*n-1)/2

# TLE
def anwser():
	i=2
	while 1:
		a,n=p(i),i+1
		while 1:
			if a<3*n+1: break
			b=p(n)
			if b>2*a-3*i+2: break
			if is_pentagonal(b-a) and is_pentagonal(b+a):
				print b-a
				return
			n+=1
		i+=1

# TLE
def anwser2():
	i=1
	while 1:
		a,n=p(i),i+1
		print a
		while 1:
			if a<3*n+1: break
			b=p(n)
			if is_pentagonal(a+b) and is_pentagonal(a+2*b):
				print a
				return
			n+=1
		i+=1

def anwser3():
	pentagonals=set(p(n) for n in range(1,3000))
	c=itertools.combinations(pentagonals,2)
	for i in c:
		if add(*i) in pentagonals and abs(sub(*i)) in pentagonals:
			print(abs(sub(*i)))
			break

import time
tStart=time.time()
anwser3()
print 'run time=',time.time()-tStart
# 5482660
# run time= 0.596796989441